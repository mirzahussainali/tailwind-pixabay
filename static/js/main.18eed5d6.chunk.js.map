{"version":3,"sources":["Components/ImageCard.js","Components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAwCeA,EAtCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACbC,EAAOD,EAAMC,KAAKC,MAAM,KAC9B,OACE,sBAAKC,UAAU,6CAAf,UACE,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,yCAAf,sBACYH,EAAMO,QAElB,+BACE,+BACE,6CACCP,EAAMQ,SAET,+BACE,iDACCR,EAAMS,aAET,+BACE,6CACCT,EAAMU,eAIb,qBAAKP,UAAU,YAAf,SACGF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACR,uBAEEV,UAAU,2FAFZ,cAIIS,IAHGC,YCFFC,EAzBK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKA,OACE,qBAAKf,UAAU,iDAAf,SACE,sBAAMgB,SANO,SAACC,GAChBA,EAAEC,iBACFN,EAAWE,IAIiBd,UAAU,kBAApC,SACE,sBAAKA,UAAU,2BAAf,UACE,uBACEmB,SAAU,SAACF,GAAD,OAAOF,EAAQE,EAAEG,OAAOC,QAClCrB,UAAU,qBACVsB,KAAK,OACLC,YAAY,oBAEd,wBAAQvB,UAAU,+DAAlB,SACE,mBAAGA,UAAU,wBAAb,8BCoBGwB,MAnCf,WACE,MAA4BX,mBAAS,IAArC,mBAAOY,EAAP,KAAeC,EAAf,KACA,EAAkCb,oBAAS,GAA3C,mBAAOc,EAAP,KAAkBC,EAAlB,KACA,EAAwBf,mBAAS,IAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KAaA,OAXAC,qBAAU,WACRC,MAAM,gCAAD,OAC6BC,qCAD7B,cACwEJ,EADxE,kCAGFK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAACX,IAEF,sBAAK7B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OACzCa,GAA+B,IAAlBF,EAAOkB,QACpB,oBAAI3C,UAAU,qCAAd,6BAED2B,EACC,oBAAI3B,UAAU,qCAAd,wBAEA,qBAAKA,UAAU,yBAAf,SACGyB,EAAOjB,KAAI,SAACX,GAAD,OACV,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM+C,aC1BlCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.18eed5d6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ImageCard = ({ image }) => {\r\n  const tags = image.tags.split(\",\");\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n      <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"font-bold text-purple-500 text-xl mb-2\">\r\n          Photo By {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views: </strong>\r\n            {image.views}\r\n          </li>\r\n          <li>\r\n            <strong>Downloads: </strong>\r\n            {image.downloads}\r\n          </li>\r\n          <li>\r\n            <strong>Likes: </strong>\r\n            {image.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n        {tags.map((tag, index) => (\r\n          <span\r\n            key={index}\r\n            className=\"inline-block bg-gray-200 rounded-fill px-3 py-1 text-sm font-semibold text-gray-700 mr-2\"\r\n          >\r\n            #{tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCard;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ImageSearch = ({ searchText }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    searchText(text);\r\n  };\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n      <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\r\n        <div className=\"bg-white shadow p-4 flex\">\r\n          <input\r\n            onChange={(e) => setText(e.target.value)}\r\n            className=\"w-full rounded p-2\"\r\n            type=\"text\"\r\n            placeholder=\"Search Image...\"\r\n          />\r\n          <button className=\"bg-red-400 hover:bg-red-300 rounded text-white p-2 pl-4 pr-4\">\r\n            <p className=\"font-semibold text-sm\">Search</p>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageSearch;\r\n","import { useState, useEffect } from \"react\";\nimport ImageCard from \"./Components/ImageCard\";\nimport ImageSearch from \"./Components/ImageSearch\";\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\n      `https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setImages(data.hits);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, [term]);\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)} />\n      {!isLoading && images.length === 0 && (\n        <h1 className=\"text-5xl text-center mx-auto-mt-32\">No Images Found</h1>\n      )}\n      {isLoading ? (\n        <h1 className=\"text-6xl text-center mx-auto-mt-32\">Loading...</h1>\n      ) : (\n        <div className=\"grid grid-cols-3 gap-4\">\n          {images.map((image) => (\n            <ImageCard key={image.id} image={image} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/main.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}